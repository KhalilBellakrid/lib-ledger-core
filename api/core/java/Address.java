// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

package co.ledger.core;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class Address {
    public abstract String getDerivationPath();

    public abstract String toString();

    public abstract BitcoinLikeAddress asBitcoinLikeAddress();

    public static native Address parse(String address);

    private static final class CppProxy extends Address
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public String getDerivationPath()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getDerivationPath(this.nativeRef);
        }
        private native String native_getDerivationPath(long _nativeRef);

        @Override
        public String toString()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_toString(this.nativeRef);
        }
        private native String native_toString(long _nativeRef);

        @Override
        public BitcoinLikeAddress asBitcoinLikeAddress()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_asBitcoinLikeAddress(this.nativeRef);
        }
        private native BitcoinLikeAddress native_asBitcoinLikeAddress(long _nativeRef);
    }
}
